name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    
    steps:
    - name: Create Release PR or Release
      id: release
      uses: googleapis/release-please-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: go
        package-name: darrot
        changelog-sections: |
          [
            {"type": "feat", "section": "Features", "hidden": false},
            {"type": "fix", "section": "Bug Fixes", "hidden": false},
            {"type": "perf", "section": "Performance Improvements", "hidden": false},
            {"type": "refactor", "section": "Code Refactoring", "hidden": false},
            {"type": "docs", "section": "Documentation", "hidden": false},
            {"type": "test", "section": "Tests", "hidden": false},
            {"type": "build", "section": "Build System", "hidden": false},
            {"type": "ci", "section": "Continuous Integration", "hidden": false},
            {"type": "chore", "section": "Miscellaneous", "hidden": false}
          ]

  build-and-upload:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopus-dev libopusfile-dev pkg-config
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build Linux AMD64
      run: |
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build \
          -ldflags="-s -w -X main.version=${{ needs.release-please.outputs.version }}" \
          -o darrot-linux-amd64 ./cmd/darrot
    
    - name: Build Linux ARM64
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu
        CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build \
          -ldflags="-s -w -X main.version=${{ needs.release-please.outputs.version }}" \
          -o darrot-linux-arm64 ./cmd/darrot
    
    - name: Create checksums
      run: |
        sha256sum darrot-linux-amd64 > checksums.txt
        sha256sum darrot-linux-arm64 >> checksums.txt
        cat checksums.txt
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: |
          darrot-linux-amd64
          darrot-linux-arm64
          checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopus-dev libopusfile-dev pkg-config
    
    - name: Generate version
      id: version
      run: |
        VERSION=$(date +%Y.%m.%d)-$(git rev-parse --short HEAD)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
    
    - name: Build Linux AMD64
      run: |
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o darrot-linux-amd64 ./cmd/darrot
    
    - name: Build Linux ARM64
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu
        CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -ldflags="-s -w" -o darrot-linux-arm64 ./cmd/darrot
    
    - name: Create checksums
      run: |
        sha256sum darrot-linux-amd64 > checksums.txt
        sha256sum darrot-linux-arm64 >> checksums.txt
        cat checksums.txt
    
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## darrot Discord TTS Bot - Release v${{ steps.version.outputs.version }}
          
          ### Changes
          - Automated release from main branch
          - Built from commit: ${{ github.sha }}
          
          ### Downloads
          - `darrot-linux-amd64`: Linux x86_64 binary
          - `darrot-linux-arm64`: Linux ARM64 binary
          - `checksums.txt`: SHA256 checksums for verification
          
          ### Installation
          1. Download the appropriate binary for your system
          2. Make it executable: `chmod +x darrot-linux-*`
          3. Copy your `.env` configuration
          4. Run: `./darrot-linux-*`
          
          ### Requirements
          - Discord bot token
          - Google Cloud TTS API credentials
          - Linux system with Opus libraries
        files: |
          darrot-linux-amd64
          darrot-linux-arm64
          checksums.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}